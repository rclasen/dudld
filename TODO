convert callbacks/signals/* to glib

upgrade to gstreamer 0.10
- playback gets stuck, sometimes

connections are dropped when there is too much pending data to send to the
client. Increasing the buffer won't help with large data sets. This the
server has to block on writes (at least for some time). This also means
the server hase to use multiple threads/-processes. Multiple processes
won't work with the cache table. Threads require some kind of locking to
avoid multiple concurrent queries.

find way to deal with "broken" files. (set/view stor_file flag)

get rid of cache table
- (tmp table) breaks multiple DB connections
- attribute changes are not automatically rematched against filter

get rid of lastplay column for files, use "last" record from history table

change lastplay evaluation for random 
- to be more random for anything but the last played xx tracks
- to take score into account
- only look at lastplay for tracks picked by random play. (non-queued)
- introdcue "last" for tracks picked by random play

make randomness - see pgdb/random.c:
- algorithm (none/plain/abs/divi/first)
- max percent (curently hardcoded 33%)
- max total (used to be hardcoded to 1000)

introduce tag-types: genre, preference, selection/playlist

include lastplay/history data in all track results
include tags data in all track results

cleanup error reporting:
 use values from errno.h
 use the same 5xx replies for all commands

rename tables from mserv_<name> to juke_<name> or mus_<name>

who caused a broadcast message ???

make filter parser modular (for queue and history filter)

complete parsexpr / filter / random

scoring: play some tracks more often
- most likely := max( (lastplay - now) base^(score/factor))
  score:=-2, ... +2

more sophisticated permission system

secure authentication? encrypted connection?

multiple (anonymouse) instances not possible because:
 track.lastplay
 track.available?
 history
 queue
 user/permission

automagically skip silence at start/end of a file gstreamer::cutter
skip junk at begin/end
allow several tracks per file (allows cutting out junk with junk-skip)

"normalize" volume level - replaygain
- gstreamer::rganalysis
- ?gstreamer::rgvolume?
- http://bugzilla.gnome.org/show_bug.cgi?id=127574
- http://replaygain.org/
- mp3gain
- gstreamer::volume::volume = 10^(rgain/20) * 10^(preamp/20) 
- dudld knobs: rg=off/peak/average, preamp=double/db, 


integrate dudl with test-listening and renaming

seeking

go back to previous track

gst sink selection: sinkadd/sinkdel?
 - ? local oss/alsa(/esd?) playback?
 - LAN mcast audio/raw
 - winamp conform inet stream
   - ? http-proxied mp3 with low bitrate
   - ? shoutcast

more queue controls
 move
 insert

voting: play the song most users requested

?support for other file formats like ogg
